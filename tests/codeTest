/*int a;
float d; // b banni car opcode de branch
int e;

a=1;
e=0;
a=2||2;
print(a);
print(1);
printf("\n");*/
int main()
{
    /*float r=9;
    int a;
    matrix ff[5];
    ff[0] = 1;
    ff[1] = 4.5;
    ff[2] = ff[0]+3;
    ff[3] = ff[1]+2.7;
    ff[4] = ff[2]+ff[3];
    printmat(ff);*/

    int a[3];
    float b =9.66;
    a[0] = 999+b;
    print(a[0]);

}
    // a = ff[2] + ff[3];
    // print(r);
    /*print(ff[3]);
    print(ff[2]);
    printf("\n");
    printmat(ff);*/
    // ff[0] = ff[1]+ff[2];*/

    // c = 2*f[3][3*c];
    // print(1+2*9+4*2+7);

    /*for(int i=0;i<5 && i<7;i++*2)
    {
        print(i);
        printf("\n");
    }
    c=0;
    while(c < 5)
    {
        // print(c);
        // printf("\n");
        c++;
        int k;
    }

    if(0.9 >= 1)
    {
        printf(">");
    }
    else if(2 > 1)
    {
        printf(">");
    }
    else
    {
        printf("=");
    }
    int t;
    t=1;
    if(2 <= 1)
    {
        printf("<=");
    }
    if(2 > 1)
    {
        printf(">");
    }
    if(2 >= 1)
    {
        printf(">=");
    }
    if(2 == 2)
    {
        printf("==");
    }
    if(r || c)
    {
        printf("||");
    }
    // if((1!=1 && 1 < 2) || (2!=2))
    if((1!=1 || 1 > 2)&&r)
    {
        printf("!=");
    }
    int t;
    t=1;*/

    /*int a;
    int c;
    int r;
    a=2;
    c=0;
    r=2;

    if(a)
    {
        int t;
        if((r && c) || c)
        {
            if(r)
            {
                print(5);
                print(5);
            }
            print(3);
            print(3);
            t = 9;
        }
        if(r)
        {
            print(4);
            print(4);
        }
        print(1);
        print(1);
        // print(t);
        print(r);
    }
    printf("\n");
    print(a);
    printf("\n");
    print(c);
    printf("\n");
    print(r);
    printf("\n");

    float d;
    a=a+2;
    printf("Test des opérations arithmétiques sur int\n");
    print(a);
    printf("\n");
    a = 1;
    print(a);
    printf("\n");

    a = -a;
    print(a);
    printf("\n");

    a = 1 - 2.5;
    print(a);
    printf("\n");

    a = 1 + 2.5;
    print(a);
    printf("\n");

    a = 3*5;
    print(a);
    printf("\n");

    a = 24/6;
    print(a);
    printf("\n");

    a = 26%6;
    print(a);
    printf("\n");

    printf("Test des opérations arithmétiques sur float\n");

    d = 1.9;
    print(d);
    printf("\n");

    d = -2.5;
    print(d);
    printf("\n");

    d = 1.9 - 2.5;
    print(d);
    printf("\n");

    d = 1.9 + 2.5;
    print(d);
    printf("\n");

    d = 3.5*5.5;
    print(d);
    printf("\n");

    d = 24.5/6.5;
    print(d);
    printf("\n");

    d = 26%6;
    print(d);
    printf("\n");

    printf("Test des opérations arithmétiques sur int et float\n");

    d = 1;
    print(d);
    printf("\n");

    a = 1.9;
    print(a);
    printf("\n");

    d = 1 + 2.5;
    print(d);
    printf("\n");

    d = 2*2.5;
    print(d);
    printf("\n");

    d = 2.5/2;
    print(d);
    printf("\n");

    d =1.5;
    d++;
    print(d);
    printf("\n");

    d=1.5;
    ++d;
    print(d);
    printf("\n");

    printf("Fin des tests\n");
}

/*{
    float a;
    int d;
    a = 6.9;
    print(a);
}


{
    {
        // float a;
        // int d;
        // a = 6.9;
        // print(a);
        // printf("\n");
    }
    float e;
}

{
    {
        float a;
    }
}

{

}
a=8;
{
    float r;
    {
        int r;
        {
            r = 9;
            a = 9;
        }
        print(r);
        printf("\n");
    }
    print(r);
}
printf("\n");
print(a);

a = 3;
a = 4;

// affectation OK
// minus unary OK
// minus binary OK
// plus binary OK
// multiple variable declaration OK

// float affectation OK
// minus unary OK
// minus binary OK
// plus binary OK
// multiple variable declaration OK

// float = int OK
// int = float NOT OK
// addition float + int OK
// soustraction float - int OK */